name: Backend tests

on:
  push:
    branches: [master, development]
  pull_request:
    branches: [master, development]

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    env:
      PORT: 8080
      NODE_ENV: test
      TEST_DATABASE: jesttest
      TEST_DATABASE_URL: postgres://api:api@localhost:5432/jesttest?schema=public
      DATABASE_URL: postgres://api:api@localhost:5432/testdb?schema=public
      GEDSAPIURL: https://geds-ssc-spc-apicast-production.api.canada.ca/gapi/v2/
      GEDSAPIKEY: ${{ secrets.GEDSAPIKEY }}
      KEYCLOAK_SECRET: ${{ secrets.KEYCLOAK_SECRET }}
      KEYCLOAK_AUTH_SERVER_URL: ${{ secrets.KEYCLOAK_AUTH_SERVER_URL }}
      REDIS_HOST: localhost
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: api
          POSTGRES_PASSWORD: api
          POSTGRES_DB: testdb
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis	
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5 --entrypoint redis-server	      
        ports:
          - 6379:6379

    defaults:
      run:
        shell: bash
        working-directory: ./services/backend     

    steps:
    - name: Checkout I-Talent code
      uses: actions/checkout@v2

    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
          
    - name: Instal Yarn dependencies
      run: yarn

    - name: Generate database client
      run: yarn generate

    - name: Run jest tests
      run: yarn test --forceExit
    
    - name: Upload test coveraget to codecov
      run: bash <(curl -s https://codecov.io/bash)

    - name: Upload test coverage to github artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Instanbul coverage
        path: ./services/backend/tests/coverage/lcov-report
