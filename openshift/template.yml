apiVersion: template.openshift.io/v1
kind: DeploymentConfig
objects:
  # Frontend service
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        openshift.io/backup-registry-hostname: "image-registry.openshift-image-registry.svc:5000"
        openshift.io/backup-server-version: "1.19"
        openshift.io/generated-by: OpenShiftNewApp
        openshift.io/migration-registry: ""
        openshift.io/restore-registry-hostname: "image-registry.openshift-image-registry.svc:5000"
        openshift.io/restore-server-version: "1.20"
      name: frontend
        labels:
          app: frontend
          migration.openshift.io/migrated-by-migmigration: b79b04fe-03da-468a-b126-da9367e86733
          migration.openshift.io/migrated-by-migplan: 8a49288e-869a-45ed-9ca6-2fd5f30bf50e
          velero.io/backup-name: c974ce50-a844-11eb-bfb1-cdc75f14fb10-d5ql4
          velero.io/restore-name: c974ce50-a844-11eb-bfb1-cdc75f14fb10-cfk55
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - frontend
            from:
              kind: ImageStreamTag
              namespace: ised-ci
              name: 'dsd-italent-frontend:development'
            lastTriggeredImage: >-
              image-registry.openshift-image-registry.svc:5000/ised-ci/dsd-italent-frontend@sha256:1eec0174616eac235e5dc9f75a9c076d072dfdf9be874796ed8d2d879c5e4430
        - type: ConfigChange
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      selector:
        deploymentconfig: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: frontend
            deploymentconfig: frontend
          annotations:
            openshift.io/generated-by: OpenShiftNewApp
        spec:
          containers:
            - name: frontend
              image: >-
                image-registry.openshift-image-registry.svc:5000/ised-ci/dsd-italent-frontend@sha256:1eec0174616eac235e5dc9f75a9c076d072dfdf9be874796ed8d2d879c5e4430
              ports:
                - containerPort: 8080
                  protocol: TCP
              env:
                - name: REACT_APP_API_ADDRESS
                  valueFrom:
                    secretKeyRef:
                      name: backend
                      key: url
                - name: REACT_APP_DRUPAL_WEBSITE_URL
                  valueFrom:
                    secretKeyRef:
                      name: drupal
                      key: url
                - name: REACT_APP_KEYCLOAK_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: keycloak
                      key: client-frontend
                - name: REACT_APP_KEYCLOAK_SERVER_URL
                  valueFrom:
                    secretKeyRef:
                      name: keycloak
                      key: uri
                - name: NODE_ENV
                  value: production
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
  ################################################################################
  # Backend service
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        openshift.io/backup-registry-hostname: "image-registry.openshift-image-registry.svc:5000"
        openshift.io/backup-server-version: "1.19"
        openshift.io/generated-by: OpenShiftNewApp
        openshift.io/migration-registry: ""
        openshift.io/restore-registry-hostname: "image-registry.openshift-image-registry.svc:5000"
        openshift.io/restore-server-version: "1.20"
      labels:
        app: backend
        migration.openshift.io/migrated-by-migmigration: b79b04fe-03da-468a-b126-da9367e86733
        migration.openshift.io/migrated-by-migplan: 8a49288e-869a-45ed-9ca6-2fd5f30bf50e
        velero.io/backup-name: c974ce50-a844-11eb-bfb1-cdc75f14fb10-d5ql4
        velero.io/restore-name: c974ce50-a844-11eb-bfb1-cdc75f14fb10-cfk55
      name: backend
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - backend
            from:
              kind: ImageStreamTag
              namespace: ised-ci
              name: "dsd-italent-backend:development"
            lastTriggeredImage: >-
              image-registry.openshift-image-registry.svc:5000/ised-ci/dsd-italent-backend@sha256:8cad31d756e27a6e73cdcb82f687b41040dace08f9428fcd888bbd7bcc8a1fe6
        - type: ConfigChange
        - type: GitHub
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      selector:
        deploymentconfig: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: backend
            deploymentconfig: backend
          annotations:
            openshift.io/generated-by: OpenShiftNewApp
        spec:
          containers:
            - name: backend
              image: >-
                image-registry.openshift-image-registry.svc:5000/ised-ci/dsd-italent-backend@sha256:8cad31d756e27a6e73cdcb82f687b41040dace08f9428fcd888bbd7bcc8a1fe6
              ports:
                - containerPort: 3000
                  protocol: TCP
              env:
                - name: DATABASE_URL
                  valueFrom:
                    secretKeyRef:
                      name: aws-database
                      key: database-url
                - name: GEDSAPIURL
                  valueFrom:
                    secretKeyRef:
                      name: geds
                      key: uri
                - name: GEDSAPIKEY
                  valueFrom:
                    secretKeyRef:
                      name: geds
                      key: password
                - name: KEYCLOAK_AUTH_SERVER_URL
                  valueFrom:
                    secretKeyRef:
                      name: keycloak
                      key: uri
                - name: KEYCLOAK_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: keycloak
                      key: password
                - name: REDIS_HOST
                  valueFrom:
                    secretKeyRef:
                      name: redis
                      key: host
                - name: REDIS_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: redis
                      key: database-password
                - name: KEYCLOAK_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: keycloak
                      key: client-backend
                - name: COOKIE_DOMAIN
                  valueFrom:
                    secretKeyRef:
                      name: cookie
                      key: domain
                - name: SESSION_NAME
                  valueFrom:
                    secretKeyRef:
                      name: cookie
                      key: session-name
                - name: COOKIE_PATH
                  valueFrom:
                    secretKeyRef:
                      name: cookie
                      key: path
                - name: PORT
                  value: "3000"
                - name: NODE_ENV
                  value: production
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
  ##############################################################################
  # Redis
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        openshift.io/backup-registry-hostname: "image-registry.openshift-image-registry.svc:5000"
        openshift.io/backup-server-version: "1.19"
        openshift.io/generated-by: OpenShiftNewApp
        openshift.io/migration-registry: ""
        openshift.io/restore-registry-hostname: "image-registry.openshift-image-registry.svc:5000"
        openshift.io/restore-server-version: "1.20"
        template.alpha.openshift.io/wait-for-ready: "true"
      labels:
        migration.openshift.io/migrated-by-migmigration: b79b04fe-03da-468a-b126-da9367e86733
        migration.openshift.io/migrated-by-migplan: 8a49288e-869a-45ed-9ca6-2fd5f30bf50e
        velero.io/backup-name: c974ce50-a844-11eb-bfb1-cdc75f14fb10-d5ql4
        velero.io/restore-name: c974ce50-a844-11eb-bfb1-cdc75f14fb10-cfk55
      name: redis
    spec:
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - redis
            from:
              kind: ImageStreamTag
              namespace: openshift
              name: "redis:3.2"
            lastTriggeredImage: >-
              image-registry.openshift-image-registry.svc:5000/openshift/redis@sha256:a9bdf52384a222635efc0284db47d12fbde8c3d0fcb66517ba8eefad1d4e9dc9
        - type: ConfigChange
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      selector:
        name: redis
      template:
        metadata:
          creationTimestamp: null
          labels:
            name: redis
          annotations:
            openshift.io/generated-by: OpenShiftNewApp
        spec:
          volumes:
            - name: redis-data
              persistentVolumeClaim:
                claimName: redis
          containers:
            - resources:
                limits:
                  memory: 512Mi
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - "-i"
                    - "-c"
                    - >-
                      test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" ==
                      "PONG"
                initialDelaySeconds: 5
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              terminationMessagePath: /dev/termination-log
              name: redis
              livenessProbe:
                tcpSocket:
                  port: 6379
                initialDelaySeconds: 30
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              env:
                - name: REDIS_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: redis
                      key: database-password
              securityContext:
                capabilities: {}
                privileged: false
              ports:
                - containerPort: 6379
                  protocol: TCP
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: redis-data
                  mountPath: /var/lib/redis/data
              terminationMessagePolicy: File
              image: >-
                image-registry.openshift-image-registry.svc:5000/openshift/redis@sha256:a9bdf52384a222635efc0284db47d12fbde8c3d0fcb66517ba8eefad1d4e9dc9
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
  ##############################################################################
  # Routes for the service
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: backend
      name: backend
      namespace: ${PROJECT_NAME}
      selfLink: /apis/route.openshift.io/v1/namespaces/${PROJECT_NAME}/routes/backend
    spec:
      host: ${PROJECT_URL}
      path: /api
      port:
        targetPort: 3000-tcp
      to:
        kind: Service
        name: backend
        weight: 100
      wildcardPolicy: None
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: frontend
      name: frontend
      namespace: ${PROJECT_NAME}
      selfLink: /apis/route.openshift.io/v1/namespaces/${PROJECT_NAME}/routes/frontend
    spec:
      host: ${PROJECT_URL}
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: frontend
        weight: 100
      wildcardPolicy: None

# Parameters
parameters:
  - name: ENVIRONMENT
    description: App environment.
    required: true
    value: prod
  - name: ROUTING_SUFFIX
    description: Routing suffix.  Leave default value.
    required: true
    value: apps.ocp.dev.ised-isde.canada.ca
